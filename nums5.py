# ⑤以下に示すのは円周率の小数部分の最初の1000桁の数字列です。
# 1415926535897932384626433832795028841971693993751058209749445923078164062862089986280348253421170679821480865132823066470938446095505822317253594081284811174502841027019385211055596446229489549303819644288109756659334461284756482337867831652712019091456485669234603486104543266482133936072602491412737245870066063155881748815209209628292540917153643678925903600113305305488204665213841469519415116094330572703657595919530921861173819326117931051185480744623799627495673518857527248912279381830119491298336733624406566430860213949463952247371907021798609437027705392171762931767523846748184676694051320005681271452635608277857713427577896091736371787214684409012249534301465495853710507922796892589235420199561121290219608640344181598136297747713099605187072113499999983729780499510597317328160963185950244594553469083026425223082533446850352619311881710100031378387528865875332083814206171776691473035982534904287554687311595628638823537875937519577818577805321712268066130019278766111959092164201989
# この中の「隣り合う2桁の数字の部分列」（全部で999個あります）を取り出します。
# 14, 41, 15, 59, 92, 26, ⋯, 19, 98, 89
# この列の中に、「03」は9回出現します。では、最も多く出現する2桁数字は何であるかを、求めてください。
# ※最も多く出現する2桁数字は1種類しかありません。

# Pythonで文字列を2文字ずつ分割する
import re
import collections
buf='1415926535897932384626433832795028841971693993751058209749445923078164062862089986280348253421170679821480865132823066470938446095505822317253594081284811174502841027019385211055596446229489549303819644288109756659334461284756482337867831652712019091456485669234603486104543266482133936072602491412737245870066063155881748815209209628292540917153643678925903600113305305488204665213841469519415116094330572703657595919530921861173819326117931051185480744623799627495673518857527248912279381830119491298336733624406566430860213949463952247371907021798609437027705392171762931767523846748184676694051320005681271452635608277857713427577896091736371787214684409012249534301465495853710507922796892589235420199561121290219608640344181598136297747713099605187072113499999983729780499510597317328160963185950244594553469083026425223082533446850352619311881710100031378387528865875332083814206171776691473035982534904287554687311595628638823537875937519577818577805321712268066130019278766111959092164201989'
list = re.split('(..)',buf)[1::2]
counted = collections.Counter(list)
d = counted.most_common()

m = max(counted)

print(counted)
print(d[0]) # 1番出現回数が多いもの
print(d[0][0]) # 答え2桁の数
